#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt {
    quick-tap-ms = <150>;
    tapping-term-ms = <150>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        screenshot {
            bindings = <&lt 0 LG(LS(NUMBER_4))>;
            key-positions = <2 3>;
        };

        undo {
            bindings = <&kp LG(Z)>;
            key-positions = <25 28>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <27 26>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <25 26>;
        };

        paste {
            bindings = <&kp LG(B)>;
            key-positions = <27 28>;
        };

        select_all {
            bindings = <&kp LG(A)>;
            key-positions = <25 29>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <13 16>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <14 15>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <25 27>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <28 26>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI F1   &kp Q       &kp W        &kp E       &kp R            &kp T            &kp Y      &kp U           &kp I       &kp O        &kp P          &kp BACKSLASH
&mt LCTRL F2  &mt LALT A  &mt LCTRL S  &mt LGUI D  &mt LSHFT F      &kp G            &kp H      &mt RSHFT J     &mt RGUI K  &mt RCTRL L  &mt RALT SEMI  &mt RCTRL SLASH
&mt LALT F3   &kp Z       &kp X        &kp C       &kp V            &kp B            &kp N      &kp M           &kp COMMA   &kp DOT      &kp QUESTION   &mt RALT PIPE
                                       &lt 2 TAB   &mt LSHFT SPACE  &lt 1 LA(GLOBE)  &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F4   &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0  &kp PLUS       &kp MINUS       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp F7
&mt LCTRL F5  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4     &kp NUMBER_5  &kp EQUAL      &kp UNDERSCORE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SINGLE_QUOTE   &mt RCTRL F8
&mt LALT F6   &kp DOLLAR    &kp AT_SIGN   &kp CARET     &kp EXCLAMATION  &kp PERCENT   &kp AMPERSAND  &kp ASTERISK    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GRAVE          &kp HASH
                                          &trans        &trans           &trans        &trans         &trans          &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp DOWN  &kp RIGHT  &kp PSCRN   &kp C_VOLUME_UP    &kp SLCK         &kp CLCK
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp HOME  &kp PG_DN  &kp PG_UP   &kp END            &kp INS          &mt RCTRL K_APP
&kp LALT         &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp UP    &kp LEFT   &kp C_MUTE  &kp C_VOLUME_DOWN  &kp PAUSE_BREAK  &kp RALT
                                             &trans     &trans     &trans        &trans    &trans     &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
